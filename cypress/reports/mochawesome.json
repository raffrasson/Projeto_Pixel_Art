{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-07-11T19:15:34.751Z",
    "end": "2021-07-11T19:16:48.813Z",
    "duration": 74062,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ecf25919-ed61-4a1f-a1ad-6705aff65f9e",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "69afc443-84c8-457b-82ce-1bb6f2a24910",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "4fa08519-faaf-41e6-b31d-2fd232ef7c55",
              "parentUUID": "69afc443-84c8-457b-82ce-1bb6f2a24910",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4fa08519-faaf-41e6-b31d-2fd232ef7c55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 122,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "78b8bdb6-f924-43d9-809b-a23881d699b6",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "1187bebe-4483-4b6a-8ed2-9e28cfe0091c",
              "parentUUID": "78b8bdb6-f924-43d9-809b-a23881d699b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "bfb076be-abc7-4a7a-9e91-c4ca9115941c",
              "parentUUID": "78b8bdb6-f924-43d9-809b-a23881d699b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "77662b14-c912-433d-a788-50d34a19515d",
              "parentUUID": "78b8bdb6-f924-43d9-809b-a23881d699b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "9b384dae-f97f-4f0d-b3d5-c7d3cbaeaa4a",
              "parentUUID": "78b8bdb6-f924-43d9-809b-a23881d699b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "b5adcaa7-36d7-4308-9c39-8b481dbf4b0f",
              "parentUUID": "78b8bdb6-f924-43d9-809b-a23881d699b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 63,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "bc03c791-6e6e-4fa3-bc48-bcd23f497dd6",
              "parentUUID": "78b8bdb6-f924-43d9-809b-a23881d699b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "6c0c567e-1b0e-4843-b812-8ba0fc366d44",
              "parentUUID": "78b8bdb6-f924-43d9-809b-a23881d699b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1187bebe-4483-4b6a-8ed2-9e28cfe0091c",
            "bfb076be-abc7-4a7a-9e91-c4ca9115941c",
            "77662b14-c912-433d-a788-50d34a19515d",
            "9b384dae-f97f-4f0d-b3d5-c7d3cbaeaa4a",
            "b5adcaa7-36d7-4308-9c39-8b481dbf4b0f",
            "bc03c791-6e6e-4fa3-bc48-bcd23f497dd6",
            "6c0c567e-1b0e-4843-b812-8ba0fc366d44"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 482,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2fcda087-cf31-496f-bdb6-85584ed7b8b6",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d5f873e4-5b69-4915-96da-619e1927847f",
              "parentUUID": "2fcda087-cf31-496f-bdb6-85584ed7b8b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "1dd27c2a-db86-436c-ad06-0cd106a9eb97",
              "parentUUID": "2fcda087-cf31-496f-bdb6-85584ed7b8b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5f873e4-5b69-4915-96da-619e1927847f",
            "1dd27c2a-db86-436c-ad06-0cd106a9eb97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 169,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "58a4f79d-41a2-48fb-9f79-794f9d26304c",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "6d8dca2b-c3f3-4b9a-b6db-ff3edcccbb2e",
              "parentUUID": "58a4f79d-41a2-48fb-9f79-794f9d26304c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "4dd1c9f0-cf97-494a-b824-58bed0a79662",
              "parentUUID": "58a4f79d-41a2-48fb-9f79-794f9d26304c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "b817c305-eb4a-4fb3-8336-85bc6cec94cb",
              "parentUUID": "58a4f79d-41a2-48fb-9f79-794f9d26304c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "43b2b403-782c-4552-9c78-1989b08e0b38",
              "parentUUID": "58a4f79d-41a2-48fb-9f79-794f9d26304c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d8dca2b-c3f3-4b9a-b6db-ff3edcccbb2e",
            "4dd1c9f0-cf97-494a-b824-58bed0a79662",
            "b817c305-eb4a-4fb3-8336-85bc6cec94cb",
            "43b2b403-782c-4552-9c78-1989b08e0b38"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 257,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bcccdb4f-9bc2-47d8-9a51-118fe913fef2",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "707bc519-8a45-4086-974c-5eefd2d81690",
              "parentUUID": "bcccdb4f-9bc2-47d8-9a51-118fe913fef2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "64802fe7-35d7-4224-8b92-af74fc994678",
              "parentUUID": "bcccdb4f-9bc2-47d8-9a51-118fe913fef2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "707bc519-8a45-4086-974c-5eefd2d81690",
            "64802fe7-35d7-4224-8b92-af74fc994678"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 319,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f1831b5e-1b89-4d79-afd8-0dbe4719725f",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 51,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "21646eb8-f971-4f02-830d-c90c35789739",
              "parentUUID": "f1831b5e-1b89-4d79-afd8-0dbe4719725f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "c6c66701-607a-4818-a8d3-7b380e1c7953",
              "parentUUID": "f1831b5e-1b89-4d79-afd8-0dbe4719725f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21646eb8-f971-4f02-830d-c90c35789739",
            "c6c66701-607a-4818-a8d3-7b380e1c7953"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 109,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f5be3a2b-42fc-4b36-9851-6c11ad3fb55b",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "4ec45a60-b2a2-45fc-bbfd-a5d3d3faa738",
              "parentUUID": "f5be3a2b-42fc-4b36-9851-6c11ad3fb55b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 7824,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "05cdaf78-361e-4ada-944d-59f50a322187",
              "parentUUID": "f5be3a2b-42fc-4b36-9851-6c11ad3fb55b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ec45a60-b2a2-45fc-bbfd-a5d3d3faa738",
            "05cdaf78-361e-4ada-944d-59f50a322187"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "57d0dd06-7a64-4a16-8ddc-f79cbeab9b06",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 1946,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "84bfbe4c-3dca-431c-9a1a-a6b8cd3fe6da",
              "parentUUID": "57d0dd06-7a64-4a16-8ddc-f79cbeab9b06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 7760,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "d62daff9-765d-4b98-9bf4-a7c437417a1c",
              "parentUUID": "57d0dd06-7a64-4a16-8ddc-f79cbeab9b06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1022,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "8502da55-49be-40e8-9f4e-0dd0a45f97b8",
              "parentUUID": "57d0dd06-7a64-4a16-8ddc-f79cbeab9b06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84bfbe4c-3dca-431c-9a1a-a6b8cd3fe6da",
            "d62daff9-765d-4b98-9bf4-a7c437417a1c",
            "8502da55-49be-40e8-9f4e-0dd0a45f97b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10728,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e024e1a-a127-46db-9135-fe88bc0c4a6d",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "7c0846bb-210b-4f93-817d-8dce856cb80e",
              "parentUUID": "2e024e1a-a127-46db-9135-fe88bc0c4a6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "ce1cc24c-19d0-45a0-8c63-2e5b0f1635f3",
              "parentUUID": "2e024e1a-a127-46db-9135-fe88bc0c4a6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "800a04e6-7d2e-4024-96c5-04bad912d697",
              "parentUUID": "2e024e1a-a127-46db-9135-fe88bc0c4a6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "06679fa4-2ac9-41cc-983e-5050ea62d761",
              "parentUUID": "2e024e1a-a127-46db-9135-fe88bc0c4a6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c0846bb-210b-4f93-817d-8dce856cb80e",
            "ce1cc24c-19d0-45a0-8c63-2e5b0f1635f3",
            "800a04e6-7d2e-4024-96c5-04bad912d697",
            "06679fa4-2ac9-41cc-983e-5050ea62d761"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2329,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bd778d74-ccd3-49da-90c3-10c718b55edd",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4216,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44201/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44201/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44201/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44201/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44201/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a868e772-494e-4716-8f45-97dc94ebbfa6",
              "parentUUID": "bd778d74-ccd3-49da-90c3-10c718b55edd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4197,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44201/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44201/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44201/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44201/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44201/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "be8c80c8-9710-4628-b6e9-6fc559648679",
              "parentUUID": "bd778d74-ccd3-49da-90c3-10c718b55edd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4173,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44201/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44201/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44201/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44201/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44201/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fd08a864-3366-43e2-9984-875333ad7143",
              "parentUUID": "bd778d74-ccd3-49da-90c3-10c718b55edd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4176,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44201/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44201/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44201/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44201/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44201/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3c75df38-0507-4074-b6de-a3b56cd48dae",
              "parentUUID": "bd778d74-ccd3-49da-90c3-10c718b55edd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4170,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44201/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44201/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44201/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44201/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44201/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6b56ed48-7684-4697-bb9b-35f735329360",
              "parentUUID": "bd778d74-ccd3-49da-90c3-10c718b55edd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4184,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44201/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44201/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44201/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44201/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44201/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1f551b63-8010-4e57-94e7-2841d195018f",
              "parentUUID": "bd778d74-ccd3-49da-90c3-10c718b55edd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4177,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44201/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44201/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44201/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44201/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44201/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cce6895d-a483-472f-9e48-e3f35dfd0435",
              "parentUUID": "bd778d74-ccd3-49da-90c3-10c718b55edd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4189,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44201/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44201/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44201/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44201/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44201/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "85e4b9b3-dcf0-44f4-8e7c-a24def080636",
              "parentUUID": "bd778d74-ccd3-49da-90c3-10c718b55edd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4190,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44201/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44201/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44201/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44201/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44201/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "881fa748-36fc-4bd4-92dd-076b6f5eb1c5",
              "parentUUID": "bd778d74-ccd3-49da-90c3-10c718b55edd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a868e772-494e-4716-8f45-97dc94ebbfa6",
            "be8c80c8-9710-4628-b6e9-6fc559648679",
            "fd08a864-3366-43e2-9984-875333ad7143",
            "3c75df38-0507-4074-b6de-a3b56cd48dae",
            "6b56ed48-7684-4697-bb9b-35f735329360",
            "1f551b63-8010-4e57-94e7-2841d195018f",
            "cce6895d-a483-472f-9e48-e3f35dfd0435",
            "85e4b9b3-dcf0-44f4-8e7c-a24def080636",
            "881fa748-36fc-4bd4-92dd-076b6f5eb1c5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 37672,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b45a63d3-7e78-47e4-a0ac-2954b75f224f",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44201/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44201/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44201/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44201/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44201/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "dff6b28a-5998-437a-94ed-6ed765830ef9",
              "parentUUID": "b45a63d3-7e78-47e4-a0ac-2954b75f224f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4167,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44201/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44201/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44201/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44201/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44201/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "402658cc-d125-455b-9bb1-83addbb44bfc",
              "parentUUID": "b45a63d3-7e78-47e4-a0ac-2954b75f224f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4193,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44201/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44201/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44201/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44201/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44201/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44201/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c664abe1-666e-4486-b9d0-5d25328ac8ab",
              "parentUUID": "b45a63d3-7e78-47e4-a0ac-2954b75f224f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dff6b28a-5998-437a-94ed-6ed765830ef9",
            "402658cc-d125-455b-9bb1-83addbb44bfc",
            "c664abe1-666e-4486-b9d0-5d25328ac8ab"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12567,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "05f1f68d-2494-45de-a1af-85d604656bbb",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 249,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44201/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44201/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44201/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44201/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44201/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44201/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44201/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0d8d8f02-fef6-4ffe-8b0d-945fd37f59c3",
              "parentUUID": "05f1f68d-2494-45de-a1af-85d604656bbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 221,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:44201/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44201/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44201/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44201/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44201/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44201/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44201/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44201/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44201/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44201/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44201/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44201/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "a0f8170d-7955-4183-86fa-c6a12bbfaff6",
              "parentUUID": "05f1f68d-2494-45de-a1af-85d604656bbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0d8d8f02-fef6-4ffe-8b0d-945fd37f59c3",
            "a0f8170d-7955-4183-86fa-c6a12bbfaff6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 470,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}